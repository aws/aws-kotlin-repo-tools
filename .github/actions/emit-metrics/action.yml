name: Emit Metrics
description: Emit metrics from another workflow/action using the kat tool
inputs:
  namespace:
    description: The CloudWatch namespace in which to emit metrics
    required: true
  dimensions:
    description: |-
      The dimensions to include with emitted metrics, as a collection of `name=value` pairs. Multiple dimensions are
      delimited by newlines (`\n`) and whitespace is trimmed from before/after each `name=value` pair. When passing
      multiple dimensions, make sure to use YAML's block literal syntax (`|` or `|-`).

      For example:
      ```
      dimensions: |
        Artifact=foo-artifact
        Platform=Kotlin/JVM
        Variant=External
      ```
    required: true
  metrics:
    description: |-
      The metrics to emit into the given namespace and using the specified dimensions. Individual metrics are written in
      the form of `<name>:<value>[:<unit>]` where:
      * <name> is the metric name and may include spaces but not colons (`:`)
      * <value> is the numeric value of the metric
      * <unit> is the CloudWatch unit name (if omitted, `None` is assumed)

      Multiple metrics are delimited by newlines (`\n`) and whitespace is trimmed from before/after each metric
      specification. When passing multiple metrics, make sure to use YAML's block literal syntax (`|` or `|-`).

      For example:
      ```
      metrics: |
        BuildTime:4.532:Seconds
        BuildSucceeded:1:Count
      ```
    required: true

runs:
  using: composite
  steps:
    - name: Emit Metrics
      shell: bash
      run: |
        # Trim a string and echo the result
        trim() {
          # args:
          #   $1 the string to trim

          echo -n "$1" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
        }

        # Convert a newline-delimited string into a single-line string delimited by spaces with each element prefixed
        format() {
          # args:
          #   $1 the prefix for each element
          #   $2 the newline-delimited string

          PROCESSED=""
          IFS=$'\n'; ARR=($2); unset IFS
          for ITEM in "${ARR[@]}"; do
            PROCESSED="$PROCESSED $1 $(trim "$INPUT")"
          done
          echo -n "$(trim "$PROCESSED")"
        }

        NAMESPACE="--namespace "${{ inputs.namespace }}""
        DIMENSIONS="$(format "--dimension" "${{ inputs.dimensions }}")"
        METRICS="$(format "--metric" "${{ inputs.metrics }}")"
        CMD="kat $NAMESPACE $DIMENSIONS $METRICS"

        echo "Executing command \"$CMD\""
        eval "$CMD"
